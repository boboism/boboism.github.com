<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[{ blog: :boboism }]]></title>
  <link href="http://boboism.github.io/atom.xml" rel="self"/>
  <link href="http://boboism.github.io/"/>
  <updated>2013-06-07T21:27:15+08:00</updated>
  <id>http://boboism.github.io/</id>
  <author>
    <name><![CDATA[Jianbo Su]]></name>
    <email><![CDATA[sujianbo@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[如何使用Ruby来读大文件（日志分析）]]></title>
    <link href="http://boboism.github.io/blog/2013/06/07/how-to-read-big-file-in-ruby/"/>
    <updated>2013-06-07T20:08:00+08:00</updated>
    <id>http://boboism.github.io/blog/2013/06/07/how-to-read-big-file-in-ruby</id>
    <content type="html"><![CDATA[<p>最近需要读取应用的日志分析数据。打开其中一个节点的Log，发现已经差不多有2G了。我的妈呀～都长这么大了～
分析文件是件麻烦事，特别是这么大的日志。而且，如果不用程序员的方法还真不知道要看到猴年马月。这是，我想起了Ruby的<a href="http://ruby-doc.org/core-1.9.3/IO.html">IO</a>类以及其子类<a href="http://ruby-doc.org/core-1.9.3/File.html">File</a>。其中有几个方法：</p>

<ol>
<li><a href="http://ruby-doc.org/core-1.9.3/IO.html#method-i-read">#read</a></li>
<li><a href="http://ruby-doc.org/core-1.9.3/IO.html#method-i-each">#each</a></li>
<li><a href="http://ruby-doc.org/core-1.9.3/IO.html#method-i-readlines">#readlines</a></li>
</ol>


<p>现在逐个介绍一下。</p>

<h2>read([length [, buffer]]) → string, buffer, or nil</h2>

<p>这个函数官方文档上面是这样写的：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Reads length bytes from the I/O stream.</span></code></pre></td></tr></table></div></figure>


<p>那也就是说，此斯比较适合用来读取二进制文件。OK，不太适合我。下一位。</p>

<h2>each(sep=$/) {|line| block } → ios</h2>

<p>文档上说：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Executes the block for every line in ios, where lines are separated by sep. ios must be opened for reading or an IOError will be raised.</span></code></pre></td></tr></table></div></figure>


<p>嘿～还可以将每行读进IO，那就非常的好，正好哥的文件比较大，这个很适合。再看看还有没有更好的。</p>

<h2>readlines(sep=$/) → array</h2>

<p>文档上说：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Reads all of the lines in ios, and returns them in anArray. </span></code></pre></td></tr></table></div></figure>


<p>看来这个是可以按照数组的方式去操作文件行的，不错。但是，还有一个关键的东东，那就是把全部的文件都读到IO中，那就是说，假如我的文件有2G，但是我的系统中只有1G内存，那就有可能再读到一半的时候就挂掉了。</p>

<p>选来选去，还是用<code>#each</code>吧。</p>

<p>以下是分析：假设我现在有个案例，需要找到日志中所有请求IP的前10名，而我的文件每行是以IP打头的，因此，就会写成以下的示例：</p>

<figure class='code'><figcaption><span>案例</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># 新建Hash，每个key的value初始化为0</span>
</span><span class='line'><span class="n">ip_counter</span> <span class="o">=</span> <span class="no">Hash</span><span class="o">.</span><span class="n">new</span><span class="p">{</span><span class="o">|</span><span class="nb">hash</span><span class="p">,</span> <span class="n">key</span><span class="o">|</span> <span class="nb">hash</span><span class="o">[</span><span class="n">key</span><span class="o">]</span> <span class="o">=</span> <span class="mi">0</span><span class="p">}</span>
</span><span class='line'><span class="c1"># 打开文件</span>
</span><span class='line'><span class="no">File</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="s2">&quot;/Users/boboism/Downloads/access.log&quot;</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span>
</span><span class='line'>  <span class="c1"># 读取每一行到内存中</span>
</span><span class='line'>  <span class="n">f</span><span class="o">.</span><span class="n">each</span><span class="p">(</span><span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">line</span><span class="o">|</span>
</span><span class='line'>    <span class="c1"># 获得IP，并且将IP的字符串转化成Symbol后作为key值，并且在计数器上＋1 </span>
</span><span class='line'>    <span class="n">line</span><span class="o">.</span><span class="n">scan</span><span class="p">(</span><span class="sr">/^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/</span><span class="p">)</span><span class="o">.</span><span class="n">each</span><span class="p">{</span><span class="o">|</span><span class="n">ip</span><span class="o">|</span> <span class="n">ip_counter</span><span class="o">[</span><span class="n">ip</span><span class="o">.</span><span class="n">to_sym</span><span class="o">]</span> <span class="o">+=</span> <span class="mi">1</span><span class="p">}</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="c1"># 按照IP出现的先后，由多到少排序，并且获取前10名</span>
</span><span class='line'><span class="n">top_ten</span> <span class="o">=</span> <span class="no">Hash</span><span class="o">[*</span><span class="n">ip_counter</span><span class="o">.</span><span class="n">sort_by</span><span class="p">{</span><span class="o">|</span><span class="n">key</span><span class="p">,</span><span class="n">value</span><span class="o">|</span> <span class="n">value</span><span class="o">*-</span><span class="mi">1</span><span class="p">}</span><span class="o">.</span><span class="n">take</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span><span class="o">.</span><span class="n">flatten</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>Total 12行就可以写一个简单的日志分析啦。回想起如果用Java的话，那是什么状况。不过题外话，这种还是可以用Linux下的Shell＋awk来完成。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[如何使用Anemone来爬视频地址]]></title>
    <link href="http://boboism.github.io/blog/2013/05/23/how-to-crawl-a-video-url-using-anemone/"/>
    <updated>2013-05-23T20:06:00+08:00</updated>
    <id>http://boboism.github.io/blog/2013/05/23/how-to-crawl-a-video-url-using-anemone</id>
    <content type="html"><![CDATA[<p>刚刚翻回之前写的一些爬虫脚本，想分享一下其中一个比较有意思的爬虫。
这个爬虫脚本使用的是<a href="http://www.chriskite.com">Chris Kite</a>写的<a href="http://anemone.rubyforge.org/">Anemone</a>（一个Ruby的爬虫库）。它提供了非常简单的DSL用来爬取每一个页面以及其URLs，官方说会自动计算出其需要的最短路径。而且，这个爬虫库是多线程。由于Ruby正则表达式的写法简洁，因此，看上去非常简短。</p>

<p>主要用到的gem有anemone，digest，还有用来保存链接的mongo</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="n">install</span> <span class="n">anemone</span>
</span><span class='line'><span class="n">gem</span> <span class="n">install</span> <span class="n">mongo</span>
</span></code></pre></td></tr></table></div></figure>


<p>首先，会定义一些全局变量,其中ENTRY_PATTERN是入口，PAGE_PATTERN是要爬的页面，ANY_PATTERN还会包含另外一些需要爬的链接：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">ENTRY_PATTERN</span> <span class="o">=</span> <span class="s2">&quot;http://www.oabt.org/?cid=5&quot;</span>
</span><span class='line'><span class="no">PAGE_PATTERN</span>  <span class="o">=</span> <span class="sr">%r[cid=(?:5|25|6|7|8|11)(?:&amp;page=\d+)?$]</span>
</span><span class='line'><span class="no">ANY_PATTERN</span>   <span class="o">=</span> <span class="no">PAGE_PATTERN</span>
</span></code></pre></td></tr></table></div></figure>


<p>接着新建一个MONGODB以及表，因为是要爬<a href="http://www.oabt.org">http://www.oabt.org</a>，所以就直接命名了：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">db</span> <span class="o">=</span> <span class="ss">Mongo</span><span class="p">:</span><span class="ss">:Connection</span><span class="o">.</span><span class="n">new</span><span class="o">.</span><span class="n">db</span><span class="p">(</span><span class="s2">&quot;oabt_org&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">movies</span> <span class="o">=</span> <span class="n">db</span><span class="o">[</span><span class="s2">&quot;movie&quot;</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>接着，是定义Anemone的一些options：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">options</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="ss">:threads</span>              <span class="o">=&gt;</span> <span class="mi">1</span><span class="p">,</span>                <span class="c1"># 线程数</span>
</span><span class='line'>  <span class="ss">:verbose</span>              <span class="o">=&gt;</span> <span class="kp">true</span><span class="p">,</span>             <span class="c1"># 详细显示 </span>
</span><span class='line'>  <span class="ss">:discard_page_bodies</span>  <span class="o">=&gt;</span> <span class="kp">true</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">:user_agent</span>           <span class="o">=&gt;</span> <span class="s2">&quot;Mozilla...&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">:delay</span>                <span class="o">=&gt;</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">:obey_robots_txt</span>      <span class="o">=&gt;</span> <span class="kp">true</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">:depth_limit</span>          <span class="o">=&gt;</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">:redirect_limit</span>       <span class="o">=&gt;</span> <span class="mi">5</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">:storage</span>              <span class="o">=&gt;</span> <span class="kp">nil</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">:cookies</span>              <span class="o">=&gt;</span> <span class="kp">nil</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">:accept_cookies</span>       <span class="o">=&gt;</span> <span class="kp">true</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">:skip_query_strings</span>   <span class="o">=&gt;</span> <span class="kp">false</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">:proxy_host</span>           <span class="o">=&gt;</span> <span class="kp">nil</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">:proxy_port</span>           <span class="o">=&gt;</span> <span class="kp">false</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">:read_timeout</span>         <span class="o">=&gt;</span> <span class="mi">20</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>官方代码中的default options</span><a href='https://github.com/chriskite/anemone/blob/master/lib/anemone/core.rb'>link</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">DEFAULT_OPTS</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1"># run 4 Tentacle threads to fetch pages</span>
</span><span class='line'>  <span class="ss">:threads</span> <span class="o">=&gt;</span> <span class="mi">4</span><span class="p">,</span>
</span><span class='line'>  <span class="c1"># disable verbose output</span>
</span><span class='line'>  <span class="ss">:verbose</span> <span class="o">=&gt;</span> <span class="kp">false</span><span class="p">,</span>
</span><span class='line'>  <span class="c1"># don&#39;t throw away the page response body after scanning it for links</span>
</span><span class='line'>  <span class="ss">:discard_page_bodies</span> <span class="o">=&gt;</span> <span class="kp">false</span><span class="p">,</span>
</span><span class='line'>  <span class="c1"># identify self as Anemone/VERSION</span>
</span><span class='line'>  <span class="ss">:user_agent</span> <span class="o">=&gt;</span> <span class="s2">&quot;Anemone/</span><span class="si">#{</span><span class="ss">Anemone</span><span class="p">:</span><span class="ss">:VERSION</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="c1"># no delay between requests</span>
</span><span class='line'>  <span class="ss">:delay</span> <span class="o">=&gt;</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>  <span class="c1"># don&#39;t obey the robots exclusion protocol</span>
</span><span class='line'>  <span class="ss">:obey_robots_txt</span> <span class="o">=&gt;</span> <span class="kp">false</span><span class="p">,</span>
</span><span class='line'>  <span class="c1"># by default, don&#39;t limit the depth of the crawl</span>
</span><span class='line'>  <span class="ss">:depth_limit</span> <span class="o">=&gt;</span> <span class="kp">false</span><span class="p">,</span>
</span><span class='line'>  <span class="c1"># number of times HTTP redirects will be followed</span>
</span><span class='line'>  <span class="ss">:redirect_limit</span> <span class="o">=&gt;</span> <span class="mi">5</span><span class="p">,</span>
</span><span class='line'>  <span class="c1"># storage engine defaults to Hash in +process_options+ if none specified</span>
</span><span class='line'>  <span class="ss">:storage</span> <span class="o">=&gt;</span> <span class="kp">nil</span><span class="p">,</span>
</span><span class='line'>  <span class="c1"># Hash of cookie name =&gt; value to send with HTTP requests</span>
</span><span class='line'>  <span class="ss">:cookies</span> <span class="o">=&gt;</span> <span class="kp">nil</span><span class="p">,</span>
</span><span class='line'>  <span class="c1"># accept cookies from the server and send them back?</span>
</span><span class='line'>  <span class="ss">:accept_cookies</span> <span class="o">=&gt;</span> <span class="kp">false</span><span class="p">,</span>
</span><span class='line'>  <span class="c1"># skip any link with a query string? e.g. http://foo.com/?u=user</span>
</span><span class='line'>  <span class="ss">:skip_query_strings</span> <span class="o">=&gt;</span> <span class="kp">false</span><span class="p">,</span>
</span><span class='line'>  <span class="c1"># proxy server hostname </span>
</span><span class='line'>  <span class="ss">:proxy_host</span> <span class="o">=&gt;</span> <span class="kp">nil</span><span class="p">,</span>
</span><span class='line'>  <span class="c1"># proxy server port number</span>
</span><span class='line'>  <span class="ss">:proxy_port</span> <span class="o">=&gt;</span> <span class="kp">false</span><span class="p">,</span>
</span><span class='line'>  <span class="c1"># HTTP read timeout in seconds</span>
</span><span class='line'>  <span class="ss">:read_timeout</span> <span class="o">=&gt;</span> <span class="kp">nil</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>好了，接着就是开始爬了,#focus_crawl中会定义需要爬的URL，只会保留ANY_PATTERN的URL，接着，如果符合PAGE_PATTERN的，会在其页面中找他的title，id，reference url，还有就是他的下载链接：magnet／thunder／ed2k（这里会使用到NOKIGIRI，因为我熟悉css selector，所以代码中直接使用css selecor来抓），接着就会检查他的引用页的hash值是否已经存在，如果不存在就直接插入mongo：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Anemone</span><span class="o">.</span><span class="n">crawl</span><span class="p">(</span><span class="no">ENTRY_PATTERN</span><span class="p">,</span> <span class="n">options</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">anemone</span><span class="o">|</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">anemone</span><span class="o">.</span><span class="n">focus_crawl</span> <span class="k">do</span> <span class="o">|</span><span class="n">page</span><span class="o">|</span>
</span><span class='line'>    <span class="nb">p</span> <span class="s2">&quot;focus </span><span class="si">#{</span><span class="n">page</span><span class="o">.</span><span class="n">url</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>    <span class="n">page</span><span class="o">.</span><span class="n">links</span><span class="o">.</span><span class="n">keep_if</span><span class="p">{</span><span class="o">|</span><span class="n">link</span><span class="o">|</span> <span class="n">link</span><span class="o">.</span><span class="n">to_s</span> <span class="o">=~</span> <span class="no">ANY_PATTERN</span><span class="p">}</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">anemone</span><span class="o">.</span><span class="n">on_pages_like</span><span class="p">(</span><span class="no">PAGE_PATTERN</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">page</span><span class="o">|</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">page</span><span class="o">.</span><span class="n">doc</span>
</span><span class='line'>      <span class="nb">p</span> <span class="s2">&quot;crawl </span><span class="si">#{</span><span class="n">page</span><span class="o">.</span><span class="n">url</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>      <span class="nb">p</span> <span class="s2">&quot;crawl header:</span><span class="si">#{</span><span class="n">page</span><span class="o">.</span><span class="n">headers</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>      <span class="nb">p</span> <span class="s2">&quot;crawl code:</span><span class="si">#{</span><span class="n">page</span><span class="o">.</span><span class="n">code</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>      <span class="nb">p</span> <span class="s2">&quot;crawl body:</span><span class="si">#{</span><span class="n">page</span><span class="o">.</span><span class="n">body</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>      <span class="nb">p</span> <span class="s2">&quot;crawl links:</span><span class="si">#{</span><span class="p">(</span><span class="n">page</span><span class="o">.</span><span class="n">links</span><span class="o">||[]</span><span class="p">)</span><span class="o">.</span><span class="n">collect</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:to_s</span><span class="p">)</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s1">&#39;\n&#39;</span><span class="p">)</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>      <span class="n">page</span><span class="o">.</span><span class="n">doc</span><span class="o">.</span><span class="n">css</span><span class="p">(</span><span class="s1">&#39;tr&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">tr</span><span class="o">|</span>
</span><span class='line'>        <span class="nb">p</span> <span class="s2">&quot;crawl tr&quot;</span>
</span><span class='line'>        <span class="n">title</span><span class="p">,</span> <span class="nb">id</span><span class="p">,</span> <span class="n">ref_url</span> <span class="o">=</span> <span class="n">tr</span><span class="o">.</span><span class="n">css</span><span class="p">(</span><span class="s1">&#39;td.name.magTitle a&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">collect</span><span class="p">{</span><span class="o">|</span><span class="n">a</span><span class="o">|</span> <span class="o">[</span><span class="n">a</span><span class="o">.</span><span class="n">text</span><span class="p">,</span> <span class="n">a</span><span class="o">[</span><span class="s1">&#39;rel&#39;</span><span class="o">]</span><span class="p">,</span> <span class="n">a</span><span class="o">[</span><span class="s1">&#39;href&#39;</span><span class="o">]]</span><span class="p">}</span><span class="o">.</span><span class="n">first</span>
</span><span class='line'>        <span class="k">if</span> <span class="nb">id</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="n">md5</span> <span class="o">=</span> <span class="ss">Digest</span><span class="p">:</span><span class="ss">:MD5</span><span class="o">.</span><span class="n">hexdigest</span><span class="p">(</span><span class="nb">id</span><span class="p">))</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="n">movies</span><span class="o">.</span><span class="n">find</span><span class="p">({</span><span class="s2">&quot;md5&quot;</span> <span class="o">=&gt;</span> <span class="n">md5</span><span class="p">})</span><span class="o">.</span><span class="n">first</span><span class="o">.</span><span class="n">nil?</span><span class="p">)</span>
</span><span class='line'>          <span class="n">cat</span> <span class="o">=</span> <span class="n">tr</span><span class="o">.</span><span class="n">css</span><span class="p">(</span><span class="s2">&quot;a.sbule&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">collect</span><span class="p">{</span><span class="o">|</span><span class="n">a</span><span class="o">|</span> <span class="o">[</span><span class="n">a</span><span class="o">[</span><span class="s1">&#39;href&#39;</span><span class="o">][</span><span class="sr">/\d+/</span><span class="o">]</span><span class="p">,</span> <span class="n">a</span><span class="o">.</span><span class="n">text</span><span class="o">]</span><span class="p">}</span><span class="o">.</span><span class="n">first</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s1">&#39;|&#39;</span><span class="p">)</span>
</span><span class='line'>          <span class="n">ed2k_url</span><span class="p">,</span> <span class="n">mag_url</span><span class="p">,</span> <span class="n">thunder_url</span> <span class="o">=</span> <span class="p">(</span><span class="n">tr</span><span class="o">.</span><span class="n">css</span><span class="p">(</span><span class="s1">&#39;td.dow a.ed2kDown&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">first</span><span class="o">||</span><span class="p">{})</span><span class="o">[</span><span class="s1">&#39;ed2k&#39;</span><span class="o">]</span><span class="p">,</span> <span class="p">(</span><span class="n">tr</span><span class="o">.</span><span class="n">css</span><span class="p">(</span><span class="s1">&#39;td.dow a.magDown&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">first</span><span class="o">||</span><span class="p">{})</span><span class="o">[</span><span class="s1">&#39;href&#39;</span><span class="o">]</span><span class="p">,</span> <span class="p">(</span><span class="n">tr</span><span class="o">.</span><span class="n">css</span><span class="p">(</span><span class="s1">&#39;td.dow a.thunder&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">first</span><span class="o">||</span><span class="p">{})</span><span class="o">[</span><span class="s1">&#39;thunderhref&#39;</span><span class="o">]</span>
</span><span class='line'>          <span class="n">movie</span> <span class="o">=</span> <span class="p">{</span><span class="ss">:md5</span> <span class="o">=&gt;</span> <span class="n">md5</span><span class="p">,</span> <span class="ss">:cat</span> <span class="o">=&gt;</span> <span class="n">cat</span><span class="p">,</span> <span class="ss">:ref_url</span> <span class="o">=&gt;</span> <span class="n">ref_url</span><span class="p">,</span> <span class="ss">:title</span> <span class="o">=&gt;</span> <span class="n">title</span><span class="p">,</span> <span class="ss">:ed2k_url</span> <span class="o">=&gt;</span> <span class="n">ed2k_url</span><span class="p">,</span> <span class="ss">:mag_url</span> <span class="o">=&gt;</span> <span class="n">mag_url</span><span class="p">,</span> <span class="ss">:thunder_url</span> <span class="o">=&gt;</span> <span class="n">thunder_url</span><span class="p">}</span>
</span><span class='line'>          <span class="nb">p</span> <span class="s2">&quot;Inserting </span><span class="si">#{</span><span class="n">movie</span><span class="o">.</span><span class="n">inspect</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>          <span class="n">movies</span><span class="o">.</span><span class="n">insert</span> <span class="n">movie</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>全部的代码如下，总共不到60行的代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;anemone&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;digest/md5&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;mongo&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Patterns</span>
</span><span class='line'><span class="no">ENTRY_PATTERN</span> <span class="o">=</span> <span class="s2">&quot;http://www.oabt.org/?cid=5&quot;</span>
</span><span class='line'><span class="no">PAGE_PATTERN</span>  <span class="o">=</span> <span class="sr">%r[cid=(?:5|25|6|7|8|11)(?:&amp;page=\d+)?$]</span>
</span><span class='line'><span class="no">ANY_PATTERN</span>   <span class="o">=</span> <span class="no">PAGE_PATTERN</span>
</span><span class='line'>
</span><span class='line'><span class="n">db</span> <span class="o">=</span> <span class="ss">Mongo</span><span class="p">:</span><span class="ss">:Connection</span><span class="o">.</span><span class="n">new</span><span class="o">.</span><span class="n">db</span><span class="p">(</span><span class="s2">&quot;oabt_org&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">movies</span> <span class="o">=</span> <span class="n">db</span><span class="o">[</span><span class="s2">&quot;movie&quot;</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="n">options</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="ss">:threads</span>              <span class="o">=&gt;</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">:verbose</span>              <span class="o">=&gt;</span> <span class="kp">true</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">:discard_page_bodies</span>  <span class="o">=&gt;</span> <span class="kp">true</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">:user_agent</span>           <span class="o">=&gt;</span> <span class="s2">&quot;Mozilla...&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">:delay</span>                <span class="o">=&gt;</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">:obey_robots_txt</span>      <span class="o">=&gt;</span> <span class="kp">true</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">:depth_limit</span>          <span class="o">=&gt;</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">:redirect_limit</span>       <span class="o">=&gt;</span> <span class="mi">5</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">:storage</span>              <span class="o">=&gt;</span> <span class="kp">nil</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">:cookies</span>              <span class="o">=&gt;</span> <span class="kp">nil</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">:accept_cookies</span>       <span class="o">=&gt;</span> <span class="kp">true</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">:skip_query_strings</span>   <span class="o">=&gt;</span> <span class="kp">false</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">:proxy_host</span>           <span class="o">=&gt;</span> <span class="kp">nil</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">:proxy_port</span>           <span class="o">=&gt;</span> <span class="kp">false</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">:read_timeout</span>         <span class="o">=&gt;</span> <span class="mi">20</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nb">p</span> <span class="s2">&quot;begin&quot;</span>
</span><span class='line'><span class="no">Anemone</span><span class="o">.</span><span class="n">crawl</span><span class="p">(</span><span class="no">ENTRY_PATTERN</span><span class="p">,</span> <span class="n">options</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">anemone</span><span class="o">|</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">anemone</span><span class="o">.</span><span class="n">focus_crawl</span> <span class="k">do</span> <span class="o">|</span><span class="n">page</span><span class="o">|</span>
</span><span class='line'>    <span class="nb">p</span> <span class="s2">&quot;focus </span><span class="si">#{</span><span class="n">page</span><span class="o">.</span><span class="n">url</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>    <span class="n">page</span><span class="o">.</span><span class="n">links</span><span class="o">.</span><span class="n">keep_if</span><span class="p">{</span><span class="o">|</span><span class="n">link</span><span class="o">|</span> <span class="n">link</span><span class="o">.</span><span class="n">to_s</span> <span class="o">=~</span> <span class="no">ANY_PATTERN</span><span class="p">}</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">anemone</span><span class="o">.</span><span class="n">on_pages_like</span><span class="p">(</span><span class="no">PAGE_PATTERN</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">page</span><span class="o">|</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">page</span><span class="o">.</span><span class="n">doc</span>
</span><span class='line'>      <span class="nb">p</span> <span class="s2">&quot;crawl </span><span class="si">#{</span><span class="n">page</span><span class="o">.</span><span class="n">url</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>      <span class="nb">p</span> <span class="s2">&quot;crawl header:</span><span class="si">#{</span><span class="n">page</span><span class="o">.</span><span class="n">headers</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>      <span class="nb">p</span> <span class="s2">&quot;crawl code:</span><span class="si">#{</span><span class="n">page</span><span class="o">.</span><span class="n">code</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>      <span class="nb">p</span> <span class="s2">&quot;crawl body:</span><span class="si">#{</span><span class="n">page</span><span class="o">.</span><span class="n">body</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>      <span class="nb">p</span> <span class="s2">&quot;crawl links:</span><span class="si">#{</span><span class="p">(</span><span class="n">page</span><span class="o">.</span><span class="n">links</span><span class="o">||[]</span><span class="p">)</span><span class="o">.</span><span class="n">collect</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:to_s</span><span class="p">)</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s1">&#39;\n&#39;</span><span class="p">)</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>      <span class="n">page</span><span class="o">.</span><span class="n">doc</span><span class="o">.</span><span class="n">css</span><span class="p">(</span><span class="s1">&#39;tr&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">tr</span><span class="o">|</span>
</span><span class='line'>        <span class="nb">p</span> <span class="s2">&quot;crawl tr&quot;</span>
</span><span class='line'>        <span class="n">title</span><span class="p">,</span> <span class="nb">id</span><span class="p">,</span> <span class="n">ref_url</span> <span class="o">=</span> <span class="n">tr</span><span class="o">.</span><span class="n">css</span><span class="p">(</span><span class="s1">&#39;td.name.magTitle a&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">collect</span><span class="p">{</span><span class="o">|</span><span class="n">a</span><span class="o">|</span> <span class="o">[</span><span class="n">a</span><span class="o">.</span><span class="n">text</span><span class="p">,</span> <span class="n">a</span><span class="o">[</span><span class="s1">&#39;rel&#39;</span><span class="o">]</span><span class="p">,</span> <span class="n">a</span><span class="o">[</span><span class="s1">&#39;href&#39;</span><span class="o">]]</span><span class="p">}</span><span class="o">.</span><span class="n">first</span>
</span><span class='line'>        <span class="k">if</span> <span class="nb">id</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="n">md5</span> <span class="o">=</span> <span class="ss">Digest</span><span class="p">:</span><span class="ss">:MD5</span><span class="o">.</span><span class="n">hexdigest</span><span class="p">(</span><span class="nb">id</span><span class="p">))</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="n">movies</span><span class="o">.</span><span class="n">find</span><span class="p">({</span><span class="s2">&quot;md5&quot;</span> <span class="o">=&gt;</span> <span class="n">md5</span><span class="p">})</span><span class="o">.</span><span class="n">first</span><span class="o">.</span><span class="n">nil?</span><span class="p">)</span>
</span><span class='line'>          <span class="n">cat</span> <span class="o">=</span> <span class="n">tr</span><span class="o">.</span><span class="n">css</span><span class="p">(</span><span class="s2">&quot;a.sbule&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">collect</span><span class="p">{</span><span class="o">|</span><span class="n">a</span><span class="o">|</span> <span class="o">[</span><span class="n">a</span><span class="o">[</span><span class="s1">&#39;href&#39;</span><span class="o">][</span><span class="sr">/\d+/</span><span class="o">]</span><span class="p">,</span> <span class="n">a</span><span class="o">.</span><span class="n">text</span><span class="o">]</span><span class="p">}</span><span class="o">.</span><span class="n">first</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s1">&#39;|&#39;</span><span class="p">)</span>
</span><span class='line'>          <span class="n">ed2k_url</span><span class="p">,</span> <span class="n">mag_url</span><span class="p">,</span> <span class="n">thunder_url</span> <span class="o">=</span> <span class="p">(</span><span class="n">tr</span><span class="o">.</span><span class="n">css</span><span class="p">(</span><span class="s1">&#39;td.dow a.ed2kDown&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">first</span><span class="o">||</span><span class="p">{})</span><span class="o">[</span><span class="s1">&#39;ed2k&#39;</span><span class="o">]</span><span class="p">,</span> <span class="p">(</span><span class="n">tr</span><span class="o">.</span><span class="n">css</span><span class="p">(</span><span class="s1">&#39;td.dow a.magDown&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">first</span><span class="o">||</span><span class="p">{})</span><span class="o">[</span><span class="s1">&#39;href&#39;</span><span class="o">]</span><span class="p">,</span> <span class="p">(</span><span class="n">tr</span><span class="o">.</span><span class="n">css</span><span class="p">(</span><span class="s1">&#39;td.dow a.thunder&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">first</span><span class="o">||</span><span class="p">{})</span><span class="o">[</span><span class="s1">&#39;thunderhref&#39;</span><span class="o">]</span>
</span><span class='line'>          <span class="n">movie</span> <span class="o">=</span> <span class="p">{</span><span class="ss">:md5</span> <span class="o">=&gt;</span> <span class="n">md5</span><span class="p">,</span> <span class="ss">:cat</span> <span class="o">=&gt;</span> <span class="n">cat</span><span class="p">,</span> <span class="ss">:ref_url</span> <span class="o">=&gt;</span> <span class="n">ref_url</span><span class="p">,</span> <span class="ss">:title</span> <span class="o">=&gt;</span> <span class="n">title</span><span class="p">,</span> <span class="ss">:ed2k_url</span> <span class="o">=&gt;</span> <span class="n">ed2k_url</span><span class="p">,</span> <span class="ss">:mag_url</span> <span class="o">=&gt;</span> <span class="n">mag_url</span><span class="p">,</span> <span class="ss">:thunder_url</span> <span class="o">=&gt;</span> <span class="n">thunder_url</span><span class="p">}</span>
</span><span class='line'>          <span class="nb">p</span> <span class="s2">&quot;Inserting </span><span class="si">#{</span><span class="n">movie</span><span class="o">.</span><span class="n">inspect</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>          <span class="n">movies</span><span class="o">.</span><span class="n">insert</span> <span class="n">movie</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[如何使用Ruby来写WebService的Provider]]></title>
    <link href="http://boboism.github.io/blog/2013/05/22/how-to-write-a-simple-webservice-provider-using-ruby-other-than-java/"/>
    <updated>2013-05-22T12:14:00+08:00</updated>
    <id>http://boboism.github.io/blog/2013/05/22/how-to-write-a-simple-webservice-provider-using-ruby-other-than-java</id>
    <content type="html"><![CDATA[<p>最近在做一个程序，用于我的EAM（固定资产管理系统）跟公司的ERP对接固定资产的数据。开始是想直接用MES在用的接口系统，修修补补上。
但是发现这个接口系统相对来说耦合比较厉害，如果要改来用，怕且都要搞个半个月才能上线。
后来就打算直接用Ruby写算了。于是就有了这篇文章。
下面看看其中的一个XML规格(大概),这是由ERP项目组定义的规法：</p>

<figure class='code'><figcaption><span>资产导入</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
</span><span class='line'><span class="nt">&lt;Interface</span> <span class="na">Sender=</span><span class="s">&quot;EAM&quot;</span> <span class="na">Receiver=</span><span class="s">&quot;ERP&quot;</span> <span class="na">Billtype=</span><span class="s">&quot;F10&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;Bill&gt;</span>
</span><span class='line'>    <span class="nt">&lt;BillHeader&gt;</span>
</span><span class='line'>      <span class="nt">&lt;AcceptanceDate&gt;</span>2006-08-28 00:00:00<span class="nt">&lt;/AcceptanceDate&gt;</span>
</span><span class='line'>      <span class="nt">&lt;AssetName&gt;</span>笔记本电脑<span class="nt">&lt;/AssetName&gt;</span>
</span><span class='line'>      <span class="nt">&lt;AssetNo&gt;</span>703021<span class="nt">&lt;/AssetNo&gt;</span>
</span><span class='line'>      <span class="nt">&lt;Brand&gt;</span>IBM X60<span class="nt">&lt;/Brand&gt;</span>
</span><span class='line'>      <span class="nt">&lt;Category&gt;</span>7<span class="nt">&lt;/Category&gt;</span>
</span><span class='line'>      <span class="nt">&lt;IsSpecialFund&gt;</span>否<span class="nt">&lt;/IsSpecialFund&gt;</span>
</span><span class='line'>      <span class="nt">&lt;IsTariff&gt;</span>否<span class="nt">&lt;/IsTariff&gt;</span>
</span><span class='line'>      <span class="nt">&lt;IsVat&gt;</span>否<span class="nt">&lt;/IsVat&gt;</span>
</span><span class='line'>      <span class="nt">&lt;Model&gt;&lt;/Model&gt;</span>
</span><span class='line'>      <span class="nt">&lt;OriginalValue&gt;</span>100.0<span class="nt">&lt;/OriginalValue&gt;</span>
</span><span class='line'>      <span class="nt">&lt;Salvage&gt;</span>20.0<span class="nt">&lt;/Salvage&gt;</span>
</span><span class='line'>      <span class="nt">&lt;SerialNo&gt;</span>L3B6534<span class="nt">&lt;/SerialNo&gt;</span>
</span><span class='line'>      <span class="nt">&lt;ServiceDate&gt;</span>2006-08-28 00:00:00<span class="nt">&lt;/ServiceDate&gt;</span>
</span><span class='line'>      <span class="nt">&lt;SubCategory&gt;</span>03<span class="nt">&lt;/SubCategory&gt;</span>
</span><span class='line'>      <span class="nt">&lt;TaxPreferType&gt;</span>不属于<span class="nt">&lt;/TaxPreferType&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/BillHeader&gt;</span>
</span><span class='line'>    <span class="nt">&lt;BillBody&gt;</span>
</span><span class='line'>      <span class="nt">&lt;Entry&gt;</span>
</span><span class='line'>        <span class="nt">&lt;AllocationQuantity&gt;</span>0.5<span class="nt">&lt;/AllocationQuantity&gt;</span>
</span><span class='line'>        <span class="nt">&lt;ConstructionPeriod&gt;</span>1<span class="nt">&lt;/ConstructionPeriod&gt;</span>
</span><span class='line'>        <span class="nt">&lt;CostCenter&gt;</span>00001<span class="nt">&lt;/CostCenter&gt;</span>
</span><span class='line'>        <span class="nt">&lt;ManagementDepartment&gt;</span>00002<span class="nt">&lt;/ManagementDepartment&gt;</span>
</span><span class='line'>        <span class="nt">&lt;SpecialPurpose&gt;</span>01<span class="nt">&lt;/SpecialPurpose&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/Entry&gt;</span>
</span><span class='line'>      <span class="nt">&lt;Entry&gt;</span>
</span><span class='line'>        <span class="nt">&lt;AllocationQuantity&gt;</span>0.5<span class="nt">&lt;/AllocationQuantity&gt;</span>
</span><span class='line'>        <span class="nt">&lt;ConstructionPeriod&gt;</span>1<span class="nt">&lt;/ConstructionPeriod&gt;</span>
</span><span class='line'>        <span class="nt">&lt;CostCenter&gt;</span>00008<span class="nt">&lt;/CostCenter&gt;</span>
</span><span class='line'>        <span class="nt">&lt;ManagementDepartment&gt;</span>00002<span class="nt">&lt;/ManagementDepartment&gt;</span>
</span><span class='line'>        <span class="nt">&lt;SpecialPurpose&gt;</span>01<span class="nt">&lt;/SpecialPurpose&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/Entry&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/BillBody&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/Bill&gt;</span>
</span><span class='line'><span class="nt">&lt;/Interface&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>我最近都在用Ruby on Rails在开发项目（个人／公司），所以感觉上这个应该没有太大困难。不过还是有以下问题需要解决：</p>

<ul>
<li>不太规范的SOAP XML内容格式。</li>
<li>How to call webservice？</li>
<li>定时执行方式？</li>
</ul>


<p>想用ActiveRecord直接生成XML，但是需求的XML跟ActiveRecord直接生成出来的样子不太一样。后来看了ActiveRecord的XML相关的builder的代码，觉得还是使用builder定制吧。
就有了以下的代码：</p>

<figure class='code'><figcaption><span>ActiveRecord::Base#to_erp_xml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">ActiveRecord</span>
</span><span class='line'>  <span class="k">class</span> <span class="nc">Base</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">to_erp_xml</span><span class="p">(</span><span class="n">options</span><span class="o">=</span><span class="p">{})</span>
</span><span class='line'>      <span class="nb">require</span> <span class="s1">&#39;builder&#39;</span> <span class="k">unless</span> <span class="n">defined?</span><span class="p">(</span><span class="no">Builder</span><span class="p">)</span>
</span><span class='line'>      <span class="n">options</span> <span class="o">=</span> <span class="n">options</span><span class="o">.</span><span class="n">dup</span>
</span><span class='line'>      <span class="n">xml</span> <span class="o">=</span> <span class="o">::</span><span class="ss">Builder</span><span class="p">:</span><span class="ss">:XmlMarkup</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'>      <span class="n">xml</span><span class="o">.</span><span class="n">instruct!</span> <span class="ss">:xml</span><span class="p">,</span> <span class="ss">:version</span> <span class="o">=&gt;</span> <span class="s2">&quot;1.0&quot;</span><span class="p">,</span> <span class="ss">:encoding</span> <span class="o">=&gt;</span> <span class="s2">&quot;UTF-8&quot;</span>
</span><span class='line'>      <span class="n">interface_attributes</span> <span class="o">=</span> <span class="o">[</span><span class="ss">:sender</span><span class="p">,</span> <span class="ss">:receiver</span><span class="p">,</span> <span class="ss">:billtype</span><span class="o">].</span><span class="n">inject</span><span class="p">({})</span> <span class="k">do</span> <span class="o">|</span><span class="n">acc</span><span class="p">,</span> <span class="n">im</span><span class="o">|</span>
</span><span class='line'>        <span class="n">acc</span><span class="o">.</span><span class="n">merge</span><span class="p">({</span><span class="n">im</span><span class="o">.</span><span class="n">to_s</span><span class="o">.</span><span class="n">camelize</span> <span class="o">=&gt;</span> <span class="n">options</span><span class="o">[</span><span class="ss">:interface</span><span class="o">][</span><span class="n">im</span><span class="o">]</span><span class="p">})</span> <span class="k">if</span> <span class="n">options</span><span class="o">[</span><span class="ss">:interface</span><span class="o">][</span><span class="n">im</span><span class="o">]</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>      <span class="n">xml</span><span class="o">.</span><span class="n">Interface</span><span class="p">(</span><span class="n">interface_attributes</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">interface</span><span class="o">|</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">options</span><span class="o">[</span><span class="ss">:include</span><span class="o">]</span>
</span><span class='line'>          <span class="n">interface</span><span class="o">.</span><span class="n">Bill</span> <span class="k">do</span> <span class="o">|</span><span class="n">bill</span><span class="o">|</span>
</span><span class='line'>            <span class="n">bill</span><span class="o">.</span><span class="n">BillHeader</span> <span class="k">do</span> <span class="o">|</span><span class="n">bill_header</span><span class="o">|</span>
</span><span class='line'>              <span class="nb">self</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">column_names</span><span class="o">.</span><span class="n">sort</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">col</span><span class="o">|</span>
</span><span class='line'>                <span class="k">unless</span> <span class="n">options</span><span class="o">[</span><span class="ss">:except</span><span class="o">]</span> <span class="o">&amp;&amp;</span> <span class="nb">Array</span><span class="p">(</span><span class="n">options</span><span class="o">[</span><span class="ss">:except</span><span class="o">]</span><span class="p">)</span><span class="o">.</span><span class="n">include?</span><span class="p">(</span><span class="n">col</span><span class="o">.</span><span class="n">to_sym</span><span class="p">)</span>
</span><span class='line'>                  <span class="n">bill_header</span><span class="o">.</span><span class="n">tag!</span> <span class="n">col</span><span class="o">.</span><span class="n">to_s</span><span class="o">.</span><span class="n">camelize</span><span class="p">,</span> <span class="nb">self</span><span class="o">[</span><span class="n">col</span><span class="o">.</span><span class="n">to_sym</span><span class="o">]</span>
</span><span class='line'>                <span class="k">end</span>
</span><span class='line'>              <span class="k">end</span>
</span><span class='line'>            <span class="k">end</span>
</span><span class='line'>            <span class="n">bill</span><span class="o">.</span><span class="n">BillBody</span> <span class="k">do</span> <span class="o">|</span><span class="n">bill_body</span><span class="o">|</span>
</span><span class='line'>              <span class="nb">Array</span><span class="p">(</span><span class="n">options</span><span class="o">[</span><span class="ss">:include</span><span class="o">]</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="kp">attr</span><span class="o">|</span>
</span><span class='line'>                <span class="nb">self</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="kp">attr</span><span class="o">.</span><span class="n">to_sym</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">association</span><span class="o">|</span>
</span><span class='line'>                  <span class="n">bill_body</span><span class="o">.</span><span class="n">Entry</span> <span class="k">do</span> <span class="o">|</span><span class="n">entity</span><span class="o">|</span>
</span><span class='line'>                    <span class="n">association</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">column_names</span><span class="o">.</span><span class="n">sort</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">col</span><span class="o">|</span>
</span><span class='line'>                      <span class="k">unless</span> <span class="n">options</span><span class="o">[</span><span class="ss">:except</span><span class="o">]</span> <span class="o">&amp;&amp;</span> <span class="nb">Array</span><span class="p">(</span><span class="n">options</span><span class="o">[</span><span class="ss">:except</span><span class="o">]</span><span class="p">)</span><span class="o">.</span><span class="n">include?</span><span class="p">(</span><span class="n">col</span><span class="o">.</span><span class="n">to_sym</span><span class="p">)</span>
</span><span class='line'>                        <span class="n">entity</span><span class="o">.</span><span class="n">tag!</span> <span class="n">col</span><span class="o">.</span><span class="n">to_s</span><span class="o">.</span><span class="n">camelize</span><span class="p">,</span> <span class="n">association</span><span class="o">[</span><span class="n">col</span><span class="o">.</span><span class="n">to_sym</span><span class="o">]</span>
</span><span class='line'>                      <span class="k">end</span>
</span><span class='line'>                    <span class="k">end</span>
</span><span class='line'>                  <span class="k">end</span>
</span><span class='line'>                <span class="k">end</span>
</span><span class='line'>              <span class="k">end</span>
</span><span class='line'>            <span class="k">end</span>
</span><span class='line'>          <span class="k">end</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>      <span class="n">xml</span><span class="o">.</span><span class="n">target!</span><span class="o">.</span><span class="n">to_s</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>为啥写的这么别扭？其实是因为我直接使用了db的view去抓数据。哈哈哈，为防以后会有变更，这样直接修改SQL就可以了：</p>

<figure class='code'><figcaption><span>AssetF10&AllocationF10</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">AssetF10</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="nb">self</span><span class="o">.</span><span class="n">table_name</span> <span class="o">=</span> <span class="s2">&quot;vw_asset_erp&quot;</span>
</span><span class='line'>  <span class="nb">self</span><span class="o">.</span><span class="n">primary_key</span> <span class="o">=</span> <span class="s2">&quot;id&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:allocations</span><span class="p">,</span> <span class="ss">:class_name</span> <span class="o">=&gt;</span> <span class="s2">&quot;AllocationF10&quot;</span><span class="p">,</span> <span class="ss">:foreign_key</span> <span class="o">=&gt;</span> <span class="s2">&quot;asset_id&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">AllocationF10</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="nb">self</span><span class="o">.</span><span class="n">table_name</span> <span class="o">=</span> <span class="s2">&quot;vw_asset_allocation_erp&quot;</span>
</span><span class='line'>  <span class="nb">self</span><span class="o">.</span><span class="n">primary_key</span> <span class="o">=</span> <span class="s2">&quot;id&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">belongs_to</span> <span class="ss">:asset</span><span class="p">,</span> <span class="ss">:class_name</span> <span class="o">=&gt;</span> <span class="s2">&quot;AssetF10&quot;</span><span class="c1">#, :foreign_key =&gt; &quot;asset_id&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>到这步，基本上XML是能够生成了，但是如何去调用呢？上rubygems.org看了看包的使用量，soap这一块savon相对来说比较好，而且文档还是很充分。感觉这样写的话相对Java的SOA调用使用xfire非常简洁方便。</p>

<figure class='code'><figcaption><span>Savon.client</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">client</span> <span class="o">=</span> <span class="no">Savon</span><span class="o">.</span><span class="n">client</span><span class="p">(</span><span class="ss">:wsdl</span> <span class="o">=&gt;</span> <span class="s2">&quot;http://172.18.81.20/BOI/Service.asmx?WSDL&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">ws_attrs</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="ss">:interface</span> <span class="o">=&gt;</span> <span class="p">{</span><span class="ss">:sender</span> <span class="o">=&gt;</span> <span class="s2">&quot;EAM&quot;</span><span class="p">,</span> <span class="ss">:receiver</span> <span class="o">=&gt;</span> <span class="s2">&quot;ERP&quot;</span><span class="p">,</span> <span class="ss">:billtype</span> <span class="o">=&gt;</span> <span class="s2">&quot;F10&quot;</span><span class="p">},</span>
</span><span class='line'>  <span class="ss">:func_name</span> <span class="o">=&gt;</span> <span class="s2">&quot;FixedAssetImport&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">:handshake</span> <span class="o">=&gt;</span> <span class="s2">&quot;111111&quot;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="n">receivable_assets</span> <span class="o">=</span> <span class="o">[]</span>
</span><span class='line'><span class="n">unreceivable_assets</span> <span class="o">=</span> <span class="o">[]</span>
</span><span class='line'><span class="no">AssetF10</span><span class="o">.</span><span class="n">all</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">asset</span><span class="o">|</span>
</span><span class='line'>  <span class="n">token</span> <span class="o">=</span> <span class="ss">UUIDTools</span><span class="p">:</span><span class="ss">:UUID</span><span class="o">.</span><span class="n">random_create</span><span class="o">.</span><span class="n">to_s</span><span class="o">.</span><span class="n">gsub</span><span class="p">(</span><span class="s2">&quot;-&quot;</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">upcase</span>
</span><span class='line'>  <span class="n">parameters</span> <span class="o">=</span> <span class="n">asset</span><span class="o">.</span><span class="n">to_erp_xml</span><span class="p">(</span><span class="n">ws_attrs</span><span class="o">.</span><span class="n">merge</span><span class="p">({</span><span class="ss">:include</span> <span class="o">=&gt;</span> <span class="ss">:allocations</span><span class="p">,</span> <span class="ss">:except</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="ss">:id</span><span class="p">,</span> <span class="ss">:asset_sync_status</span><span class="p">,</span> <span class="ss">:asset_id</span><span class="o">]</span><span class="p">}))</span>
</span><span class='line'>  <span class="n">resp</span> <span class="o">=</span> <span class="n">client</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="ss">:boi_invoke</span><span class="p">,</span> <span class="ss">:message</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>    <span class="ss">:from</span>       <span class="o">=&gt;</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">ws_attrs</span><span class="o">[</span><span class="ss">:interface</span><span class="o">][</span><span class="ss">:sender</span><span class="o">]</span><span class="si">}#{</span><span class="n">ws_attrs</span><span class="o">[</span><span class="ss">:handshake</span><span class="o">]</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="ss">:to</span>         <span class="o">=&gt;</span> <span class="n">ws_attrs</span><span class="o">[</span><span class="ss">:interface</span><span class="o">][</span><span class="ss">:receiver</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>    <span class="ss">:token</span>      <span class="o">=&gt;</span> <span class="n">token</span><span class="p">,</span>
</span><span class='line'>    <span class="ss">:func_name</span>  <span class="o">=&gt;</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">ws_attrs</span><span class="o">[</span><span class="ss">:func_name</span><span class="o">]</span><span class="si">}</span><span class="s2">_</span><span class="si">#{</span><span class="n">ws_attrs</span><span class="o">[</span><span class="ss">:interface</span><span class="o">][</span><span class="ss">:billtype</span><span class="o">]</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="ss">:parameters</span> <span class="o">=&gt;</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">parameters</span><span class="o">.</span><span class="n">to_s</span><span class="si">}</span><span class="s2">&quot;</span> <span class="p">})</span>
</span><span class='line'>  <span class="nb">p</span> <span class="n">parameters</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">resp</span><span class="o">.</span><span class="n">body</span><span class="o">[</span><span class="ss">:boi_invoke_response</span><span class="o">][</span><span class="ss">:boi_invoke_result</span><span class="o">]</span>
</span><span class='line'>    <span class="n">receivable_assets</span> <span class="o">&lt;&lt;</span> <span class="p">{</span><span class="n">asset</span><span class="o">.</span><span class="n">asset_no</span> <span class="o">=&gt;</span> <span class="s2">&quot;TOKEN=</span><span class="si">#{</span><span class="n">token</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">}</span>
</span><span class='line'>    <span class="c1"># update records</span>
</span><span class='line'>    <span class="n">asset</span><span class="o">.</span><span class="n">asset_sync_status</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class='line'>    <span class="n">asset</span><span class="o">.</span><span class="n">save</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="n">unreceivable_assets</span> <span class="o">&lt;&lt;</span> <span class="p">{</span><span class="n">asset</span><span class="o">.</span><span class="n">asset_no</span> <span class="o">=&gt;</span> <span class="s2">&quot;TOKEN=</span><span class="si">#{</span><span class="n">token</span><span class="si">}</span><span class="s2"> </span><span class="si">#{</span><span class="n">resp</span><span class="o">.</span><span class="n">body</span><span class="o">[</span><span class="ss">:boi_invoke_response</span><span class="o">][</span><span class="ss">:result</span><span class="o">]</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">}</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>OK，webservice call的问题已经解决了。就剩下最后一个问题，定时调用！
一开始就想通过linux crontab来定时调用这接口，这样就会相对于固定资产管理系统本身的sidekiq独立起来（毕竟这个是一个月才调用1次的接口，无需实时调要求，感觉也没有这个必要）</p>

<figure class='code'><figcaption><span>eam_soa_f10.sh</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/sh</span>
</span><span class='line'>/home/it/.rvm/rubies/ruby-1.9.3-p374/bin/ruby /home/it/projects/ruby/cli/eam_soa/eam_soa_f10.rb &gt;&gt; /home/it/projects/ruby/cli/eam_soa/eam_soa_f10.log 2&gt;&amp;1
</span></code></pre></td></tr></table></div></figure>


<p>接着在crontab中增加一行调用：</p>

<figure class='code'><figcaption><span>crontab</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>* * 25 * * /home/it/projects/ruby/cli/eam_soa/eam_soa_f10.sh
</span></code></pre></td></tr></table></div></figure>


<p>OK~ 大功告成。相对Java版本的接口系统，同样功能大概只用了其1个类（差不多）的代码量就完成了～。</p>
]]></content>
  </entry>
  
</feed>
